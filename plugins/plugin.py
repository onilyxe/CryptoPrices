from plugins import new_message, restricted
import yaml


@restricted.restricted
def plugin(update, context):
    new_message.new_message(update)

    if not context.args:
        context.bot.send_message(chat_id=update.message.chat_id, parse_mode='markdown',
            text='‚öôÔ∏è*Plugins*\n`/plugin list` ‚Äî _—Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤._\n`/plugin enable [name]` ‚Äî _–≤–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≥–∏–Ω._\n`/plugin disable [name]` ‚Äî _–≤—ã–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≥–∏–Ω._')
        return

    def switch_state(args, desired_state):
        if not args[1]:
            context.bot.send_message(chat_id=update.message.chat_id, parse_mode='markdown',
                text='‚öôÔ∏èPlugins\n*/plugin list* ‚Äî —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤.\n*/plugin enable [name]* ‚Äî –≤–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≥–∏–Ω.\n*/plugin disable [name]* ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≥–∏–Ω.')
        if context.args[1] in config['PLUGINS']:
            if config['PLUGINS'][args[1]] != desired_state:
                config['PLUGINS'][args[1]] = desired_state
                context.bot.send_message(chat_id=update.message.chat_id, text=f'üöÄ–£—Å–ø–µ—à–Ω–æ!')
            else:
                context.bot.send_message(chat_id=update.message.chat_id, text=f'‚ÑπÔ∏è–ù–µ –¥—É–º–∞—é —á—Ç–æ —Å–º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –¥–≤–∞–∂–¥—ã')
        else:
            context.bot.send_message(chat_id=update.message.chat_id, text=f'‚ÑπÔ∏è–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ "{args[1]}"')

    # load config.yaml
    with open('config.yaml', 'r+') as f:
        config = yaml.full_load(f)

        if context.args[0] == 'list':
            plugin_list = ['‚úÖ    ' + plugins + '\n' if config['PLUGINS'][plugins] else '‚ùå    ' + plugins + '\n' for plugins in config['PLUGINS']]
            context.bot.send_message(chat_id=update.message.chat_id, text=''.join(plugin_list))
        if context.args[0] == 'enable':
            switch_state(context.args, True)
        if context.args[0] == 'disable':
            switch_state(context.args, False)
        f.seek(0)
        yaml.dump(config, f)